trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseNode@1
  displayName: 'Install Node.js'
  inputs:
    version: '16.x'

- script: |
    npm install
  displayName: 'NpmInstall'

- script: |
    npm run build
  displayName: 'NpmBuild'

- task: PublishPipelineArtifact@1
  inputs:
    artifactName: AngularLogin
    targetPath: '$(Build.SourcesDirectory)/dist'
    publishLocation: 'pipeline'
  displayName: 'PublishNpmArtifact'

- script: |
    ls $(Build.SourcesDirectory)/dist
  displayName: 'List Published Artifact'

- task: DownloadPipelineArtifact@2
  displayName: 'Download Artifact'
  inputs:
    artifactName: AngularLogin
    targetPath: '$(Build.SourcesDirectory)/DistZipDownload'

- task: ExtractFiles@1
  displayName: 'Extract Artifact'
  inputs:
    archiveFilePatterns: '$(Build.SourcesDirectory)/DistZipDownload/*.zip'
    destinationFolder: '$(Build.SourcesDirectory)/DistUnZip'

- script: |
    ls $(Build.SourcesDirectory)/DistUnZip/angular-login
  displayName: 'List Downloaded Artifact'

- task: IISWebAppDeploymentOnMachineGroup@0
  displayName: 'Deploy to IIS'
  inputs:
    WebSiteName: 'AngularLogin'
    TakeAppOfflineFlag: true
    XmlTransformation: true
    XmlVariableSubstitution: true
    RemoteIISAppPhysicalPath: '$(Build.SourcesDirectory)/DistUnZip/angular-login'
    TakeAppOfflineOnUpgrade: true
    RenameFilesFlag: true